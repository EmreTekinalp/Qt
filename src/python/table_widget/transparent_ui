# Transparent PySide
from PySide import QtGui, QtCore


# protect from garbage collection:
class _GCProtector(object):
    widgets = []


def main():
    w = TranspGui()
    w.run()


class TranspGui(QtGui.QWidget):
    def __init__(self, parent=None):
        QtGui.QWidget.__init__(self)
        self.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        self.setAttribute(QtCore.Qt.WA_TranslucentBackground)

        self.slvalue = 50
        main_layout = QtGui.QVBoxLayout()

        self.slider = QtGui.QSlider()
        self.slider.setMinimum(0)
        self.slider.setMaximum(100)
        self.slider.setValue(50)
        self.slider.valueChanged.connect(self.slider_value)
        main_layout.addWidget(self.slider)

        self.close_btn = QtGui.QPushButton("Close")
        self.close_btn.clicked.connect(self.click_close)
        main_layout.addWidget(self.close_btn)

        self.setLayout(main_layout)
        self.resize(400, 400)
        _GCProtector.widgets.append(self)

    def run(self):
        self.show()

    def click_close(self):
        self.hide()

    def slider_value(self):
        self.slvalue = self.slider.value()

    def paintEvent(self, e):
        super(TranspGui, self).paintEvent(e)
        painter = QtGui.QPainter()
        painter.begin(self)
        painter.fillRect(0, 0, self.width(), self.height(),
                         QtGui.QColor(0, 0, 0, self.slider.value()))
        painter.setCompositionMode(QtGui.QPainter.CompositionMode_Source)
        painter.end()


if __name__ == '__main__':
    main()
